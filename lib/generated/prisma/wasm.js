
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  stripeCustomerId: 'stripeCustomerId',
  role: 'role',
  banned: 'banned',
  banReason: 'banReason',
  banExpires: 'banExpires',
  deletedAt: 'deletedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId',
  impersonatedBy: 'impersonatedBy'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DomainScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  desc: 'desc',
  color: 'color',
  iconName: 'iconName',
  iconLib: 'iconLib',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  desc: 'desc',
  color: 'color',
  iconName: 'iconName',
  iconLib: 'iconLib',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  domainId: 'domainId',
  deletedAt: 'deletedAt'
};

exports.Prisma.LearningPathScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  smallDescription: 'smallDescription',
  fileKey: 'fileKey',
  price: 'price',
  currency: 'currency',
  duration: 'duration',
  slug: 'slug',
  status: 'status',
  level: 'level',
  stripePriceId: 'stripePriceId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  deletedAt: 'deletedAt'
};

exports.Prisma.LearningPathItemScalarFieldEnum = {
  id: 'id',
  type: 'type',
  position: 'position',
  learningPathId: 'learningPathId',
  courseId: 'courseId',
  workshopId: 'workshopId',
  resourceId: 'resourceId'
};

exports.Prisma.CourseScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  smallDescription: 'smallDescription',
  description: 'description',
  fileKey: 'fileKey',
  price: 'price',
  currency: 'currency',
  duration: 'duration',
  status: 'status',
  level: 'level',
  stripePriceId: 'stripePriceId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  categoryId: 'categoryId',
  deletedAt: 'deletedAt'
};

exports.Prisma.ChapterScalarFieldEnum = {
  id: 'id',
  title: 'title',
  position: 'position',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  courseId: 'courseId'
};

exports.Prisma.LessonScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  thumbnailKey: 'thumbnailKey',
  videoKey: 'videoKey',
  position: 'position',
  duration: 'duration',
  public: 'public',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  chapterId: 'chapterId'
};

exports.Prisma.WorkshopScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  slug: 'slug',
  statement: 'statement',
  fileKey: 'fileKey',
  statementsStartFileKey: 'statementsStartFileKey',
  statementsStartFileUrl: 'statementsStartFileUrl',
  statementVideoKey: 'statementVideoKey',
  price: 'price',
  currency: 'currency',
  duration: 'duration',
  status: 'status',
  level: 'level',
  stripePriceId: 'stripePriceId',
  solution: 'solution',
  solutionFileKey: 'solutionFileKey',
  solutionFileUrl: 'solutionFileUrl',
  solutionVideoKey: 'solutionVideoKey',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  deletedAt: 'deletedAt'
};

exports.Prisma.ResourceScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  fileKey: 'fileKey',
  url: 'url',
  type: 'type',
  createdAt: 'createdAt',
  userId: 'userId'
};

exports.Prisma.LearningPathResourceScalarFieldEnum = {
  learningPathId: 'learningPathId',
  resourceId: 'resourceId'
};

exports.Prisma.CourseResourceScalarFieldEnum = {
  courseId: 'courseId',
  resourceId: 'resourceId'
};

exports.Prisma.LessonResourceScalarFieldEnum = {
  lessonId: 'lessonId',
  resourceId: 'resourceId'
};

exports.Prisma.WorkshopResourceScalarFieldEnum = {
  workshopId: 'workshopId',
  resourceId: 'resourceId'
};

exports.Prisma.LessonProgressScalarFieldEnum = {
  id: 'id',
  completed: 'completed',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  lessonId: 'lessonId'
};

exports.Prisma.UserProgressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  itemId: 'itemId',
  completed: 'completed',
  updatedAt: 'updatedAt'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  color: 'color',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CourseTagScalarFieldEnum = {
  courseId: 'courseId',
  tagId: 'tagId'
};

exports.Prisma.WorkshopTagScalarFieldEnum = {
  workshopId: 'workshopId',
  tagId: 'tagId'
};

exports.Prisma.LearningPathTagScalarFieldEnum = {
  learningPathId: 'learningPathId',
  tagId: 'tagId'
};

exports.Prisma.PromotionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  discount: 'discount',
  type: 'type',
  startsAt: 'startsAt',
  endsAt: 'endsAt',
  active: 'active',
  itemType: 'itemType',
  courseId: 'courseId',
  workshopId: 'workshopId',
  learningPathId: 'learningPathId'
};

exports.Prisma.PromoCodeScalarFieldEnum = {
  id: 'id',
  code: 'code',
  description: 'description',
  discount: 'discount',
  type: 'type',
  usageLimit: 'usageLimit',
  usedCount: 'usedCount',
  startsAt: 'startsAt',
  endsAt: 'endsAt',
  active: 'active'
};

exports.Prisma.EnrollmentScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  courseId: 'courseId',
  learningPathId: 'learningPathId',
  workshopId: 'workshopId',
  userId: 'userId',
  paymentId: 'paymentId',
  deletedAt: 'deletedAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  stripeId: 'stripeId',
  userId: 'userId',
  courseId: 'courseId',
  learningPathId: 'learningPathId',
  workshopId: 'workshopId',
  amount: 'amount',
  currency: 'currency',
  status: 'status',
  method: 'method',
  receiptUrl: 'receiptUrl',
  createdAt: 'createdAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.InvoiceScalarFieldEnum = {
  id: 'id',
  number: 'number',
  userId: 'userId',
  amount: 'amount',
  currency: 'currency',
  pdfUrl: 'pdfUrl',
  date: 'date',
  createdAt: 'createdAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.InvoiceItemScalarFieldEnum = {
  id: 'id',
  invoiceId: 'invoiceId',
  title: 'title',
  type: 'type',
  referenceId: 'referenceId',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  total: 'total'
};

exports.Prisma.ObjectiveScalarFieldEnum = {
  id: 'id',
  content: 'content',
  createdAt: 'createdAt'
};

exports.Prisma.PrerequisiteScalarFieldEnum = {
  id: 'id',
  content: 'content',
  createdAt: 'createdAt'
};

exports.Prisma.CourseObjectiveScalarFieldEnum = {
  courseId: 'courseId',
  objectiveId: 'objectiveId'
};

exports.Prisma.CoursePrerequisiteScalarFieldEnum = {
  courseId: 'courseId',
  prerequisiteId: 'prerequisiteId'
};

exports.Prisma.WorkshopObjectiveScalarFieldEnum = {
  workshopId: 'workshopId',
  objectiveId: 'objectiveId'
};

exports.Prisma.WorkshopPrerequisiteScalarFieldEnum = {
  workshopId: 'workshopId',
  prerequisiteId: 'prerequisiteId'
};

exports.Prisma.LearningPathObjectiveScalarFieldEnum = {
  learningPathId: 'learningPathId',
  objectiveId: 'objectiveId'
};

exports.Prisma.LearningPathPrerequisiteScalarFieldEnum = {
  learningPathId: 'learningPathId',
  prerequisiteId: 'prerequisiteId'
};

exports.Prisma.FeatureScalarFieldEnum = {
  id: 'id',
  title: 'title',
  desc: 'desc',
  color: 'color',
  iconName: 'iconName',
  iconLib: 'iconLib',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  postalCode: 'postalCode',
  city: 'city',
  country: 'country',
  email: 'email',
  phone: 'phone',
  siret: 'siret',
  vatNumber: 'vatNumber',
  logoUrl: 'logoUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SocialLinkScalarFieldEnum = {
  id: 'id',
  name: 'name',
  iconLib: 'iconLib',
  iconName: 'iconName',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanySocialLinkScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  socialLinkId: 'socialLinkId',
  url: 'url',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  STUDENT: 'STUDENT',
  INSTRUCTOR: 'INSTRUCTOR',
  ADMIN: 'ADMIN',
  MODERATOR: 'MODERATOR'
};

exports.Levels = exports.$Enums.Levels = {
  Beginner: 'Beginner',
  Intermediate: 'Intermediate',
  Advanced: 'Advanced',
  Expert: 'Expert'
};

exports.Status = exports.$Enums.Status = {
  Draft: 'Draft',
  Published: 'Published',
  Archived: 'Archived'
};

exports.ResourceType = exports.$Enums.ResourceType = {
  PDF: 'PDF',
  Link: 'Link',
  Tool: 'Tool',
  Video: 'Video'
};

exports.ItemType = exports.$Enums.ItemType = {
  Course: 'Course',
  Workshop: 'Workshop',
  Resource: 'Resource',
  LearningPath: 'LearningPath'
};

exports.DiscountType = exports.$Enums.DiscountType = {
  PERCENTAGE: 'PERCENTAGE',
  FIXED: 'FIXED'
};

exports.InvoiceItemType = exports.$Enums.InvoiceItemType = {
  COURSE: 'COURSE',
  WORKSHOP: 'WORKSHOP',
  SUBSCRIPTION: 'SUBSCRIPTION',
  LEARNING_PATH: 'LEARNING_PATH'
};

exports.enrollmentStatus = exports.$Enums.enrollmentStatus = {
  Pending: 'Pending',
  Active: 'Active',
  Cancelled: 'Cancelled'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  Succeeded: 'Succeeded',
  Pending: 'Pending',
  Failed: 'Failed'
};

exports.Prisma.ModelName = {
  User: 'User',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification',
  Domain: 'Domain',
  Category: 'Category',
  LearningPath: 'LearningPath',
  LearningPathItem: 'LearningPathItem',
  Course: 'Course',
  Chapter: 'Chapter',
  Lesson: 'Lesson',
  Workshop: 'Workshop',
  Resource: 'Resource',
  LearningPathResource: 'LearningPathResource',
  CourseResource: 'CourseResource',
  LessonResource: 'LessonResource',
  WorkshopResource: 'WorkshopResource',
  LessonProgress: 'LessonProgress',
  UserProgress: 'UserProgress',
  Tag: 'Tag',
  CourseTag: 'CourseTag',
  WorkshopTag: 'WorkshopTag',
  LearningPathTag: 'LearningPathTag',
  Promotion: 'Promotion',
  PromoCode: 'PromoCode',
  Enrollment: 'Enrollment',
  Payment: 'Payment',
  Invoice: 'Invoice',
  InvoiceItem: 'InvoiceItem',
  Objective: 'Objective',
  Prerequisite: 'Prerequisite',
  CourseObjective: 'CourseObjective',
  CoursePrerequisite: 'CoursePrerequisite',
  WorkshopObjective: 'WorkshopObjective',
  WorkshopPrerequisite: 'WorkshopPrerequisite',
  LearningPathObjective: 'LearningPathObjective',
  LearningPathPrerequisite: 'LearningPathPrerequisite',
  Feature: 'Feature',
  Company: 'Company',
  SocialLink: 'SocialLink',
  CompanySocialLink: 'CompanySocialLink'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/hakimaittayeb/WebstormProjects/Projects/cs-lms/lib/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/hakimaittayeb/WebstormProjects/Projects/cs-lms/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../lib/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// -----------------------------------\n// ENUMS\n// -----------------------------------\nenum UserRole {\n  STUDENT\n  INSTRUCTOR\n  ADMIN\n  MODERATOR\n}\n\nenum Levels {\n  Beginner\n  Intermediate\n  Advanced\n  Expert\n}\n\nenum Status {\n  Draft\n  Published\n  Archived\n}\n\nenum ResourceType {\n  PDF\n  Link\n  Tool\n  Video\n}\n\nenum ItemType {\n  Course\n  Workshop\n  Resource\n  LearningPath\n}\n\nenum DiscountType {\n  PERCENTAGE\n  FIXED\n}\n\nenum InvoiceItemType {\n  COURSE\n  WORKSHOP\n  SUBSCRIPTION\n  LEARNING_PATH\n}\n\nenum enrollmentStatus {\n  Pending\n  Active\n  Cancelled\n}\n\nenum PaymentStatus {\n  Succeeded\n  Pending\n  Failed\n}\n\n// -----------------------------------\n// ACCOUNT & USER\n// -----------------------------------\n\nmodel User {\n  id            String    @id\n  name          String\n  email         String\n  emailVerified Boolean\n  image         String?\n  createdAt     DateTime\n  updatedAt     DateTime\n  sessions      Session[]\n  accounts      Account[]\n\n  stripeCustomerId String?   @unique(map: \"uq_user_stripeCustomerId\")\n  role             String?\n  // TODO ::  role UserRole @default(STUDENT) // Au lieu de String?\n  banned           Boolean?\n  banReason        String?\n  banExpires       DateTime?\n\n  lessonProgress LessonProgress[]\n\n  enrollment Enrollment[]\n  Payment    Payment[]\n  Invoice    Invoice[]\n\n  courses      Course[]\n  LearningPath LearningPath[]\n  Workshop     Workshop[]\n\n  // Soft delete\n  deletedAt DateTime?\n  Resource  Resource[]\n\n  @@unique([email], map: \"uq_user_email\")\n  @@map(\"user\")\n}\n\nmodel Session {\n  id        String   @id\n  expiresAt DateTime\n  token     String\n  createdAt DateTime\n  updatedAt DateTime\n  ipAddress String?\n  userAgent String?\n  userId    String\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  impersonatedBy String?\n\n  @@unique([token], map: \"uq_session_token\")\n  @@map(\"session\")\n}\n\nmodel Account {\n  id                    String    @id\n  accountId             String\n  providerId            String\n  userId                String\n  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  accessToken           String?\n  refreshToken          String?\n  idToken               String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  password              String?\n  createdAt             DateTime\n  updatedAt             DateTime\n\n  @@map(\"account\")\n}\n\nmodel Verification {\n  id         String    @id\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime?\n  updatedAt  DateTime?\n\n  @@map(\"verification\")\n}\n\n// -----------------------------------\n// Organisation\n// -----------------------------------\n\nmodel Domain {\n  id       String  @id @default(uuid())\n  title    String\n  slug     String  @unique(map: \"uq_domain_slug\")\n  desc     String\n  color    String?\n  iconName String?\n  iconLib  String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  categories Category[]\n\n  // Soft delete\n  deletedAt DateTime?\n}\n\nmodel Category {\n  id       String  @id @default(uuid())\n  title    String\n  slug     String  @unique(map: \"uq_category_slug\")\n  desc     String\n  color    String?\n  iconName String?\n  iconLib  String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  courses Course[]\n\n  domain   Domain @relation(fields: [domainId], references: [id], onDelete: Cascade)\n  domainId String\n\n  // Soft delete\n  deletedAt DateTime?\n}\n\n// -----------------------------------\n// PRODUCTS & ITEMS\n// -----------------------------------\n\nmodel LearningPath {\n  id               String @id @default(uuid())\n  title            String\n  description      String\n  smallDescription String\n  fileKey          String\n\n  price         Int\n  currency      String @default(\"EUR\") // Ajout recommandé\n  duration      Int\n  slug          String @unique(map: \"uq_learningPath_slug\")\n  status        String\n  level         String\n  stripePriceId String @unique(map: \"uq_learningPath_stripePriceId\")\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  user   User?  @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId String\n\n  tags      LearningPathTag[]\n  contents  LearningPathItem[]\n  progress  UserProgress[]         @relation(\"LearningPathProgress\")\n  resources LearningPathResource[]\n\n  objectives    LearningPathObjective[]\n  prerequisites LearningPathPrerequisite[]\n\n  promoCodes PromoCode[] @relation(\"LearningPathPromoCodes\")\n  promotions Promotion[] @relation(\"LearningPathPromotion\")\n\n  Enrollment Enrollment[]\n\n  // Soft delete\n  deletedAt DateTime?\n  Payment   Payment[]\n}\n\nmodel LearningPathItem {\n  id String @id @default(uuid())\n\n  type     ItemType\n  position Int\n\n  learningPathId String\n  learningPath   LearningPath @relation(fields: [learningPathId], references: [id], onDelete: Cascade)\n\n  courseId String?\n  course   Course? @relation(\"CourseItems\", fields: [courseId], references: [id], map: \"fk_course_item\")\n\n  workshopId String?\n  workshop   Workshop? @relation(\"WorkshopItems\", fields: [workshopId], references: [id], map: \"fk_workshop_item\")\n\n  resourceId String?\n  resource   Resource? @relation(\"ResourceItems\", fields: [resourceId], references: [id], map: \"fk_resource_item\")\n}\n\nmodel Course {\n  id               String @id @default(uuid())\n  title            String\n  slug             String @unique(map: \"uq_course_slug\")\n  smallDescription String\n  description      String\n  fileKey          String\n  price            Int\n  currency         String @default(\"EUR\") // Ajout recommandé\n  duration         Int\n  status           String\n  level            String\n\n  stripePriceId String @unique(map: \"uq_course_stripePriceId\")\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  user   User?  @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId String\n\n  chapters   Chapter[]\n  enrollment Enrollment[]\n\n  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)\n  categoryId String\n\n  Payment Payment[]\n\n  promotions Promotion[] @relation(\"CoursePromotion\")\n  promoCodes PromoCode[] @relation(\"CoursePromoCodes\")\n\n  tags CourseTag[]\n\n  progress  UserProgress[]   @relation(\"CourseProgress\")\n  resources CourseResource[]\n\n  learningPathItems LearningPathItem[] @relation(\"CourseItems\")\n\n  objectives    CourseObjective[]\n  prerequisites CoursePrerequisite[]\n\n  // Soft delete\n  deletedAt DateTime?\n}\n\nmodel Chapter {\n  id String @id @default(uuid())\n\n  title    String\n  position Int\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)\n  courseId String\n\n  lessons Lesson[]\n}\n\nmodel Lesson {\n  id String @id @default(uuid())\n\n  title        String\n  description  String?\n  thumbnailKey String?\n  videoKey     String?\n  position     Int\n\n  duration Int     @default(0)\n  public   Boolean @default(false)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  chapter   Chapter @relation(fields: [chapterId], references: [id], onDelete: Cascade)\n  chapterId String\n\n  lessonProgress LessonProgress[]\n\n  resources LessonResource[]\n\n  // Ajouter des index composites\n  @@index([chapterId, position])\n}\n\nmodel Workshop {\n  id                     String  @id @default(uuid())\n  title                  String\n  description            String\n  slug                   String  @unique(map: \"uq_workshop_slug\")\n  statement              String\n  fileKey                String\n  statementsStartFileKey String? // utilisé si l'utilisateur upload un fichier\n  statementsStartFileUrl String? // utilisé si l'utilisateur fournit un lien\n  statementVideoKey      String?\n  price                  Int\n  currency               String  @default(\"EUR\") // Ajout recommandé\n  duration               Int\n  status                 String\n  level                  String\n  stripePriceId          String? @unique(map: \"uq_workshop_stripePriceId\")\n\n  solution         String?\n  solutionFileKey  String?\n  solutionFileUrl  String?\n  solutionVideoKey String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  user   User?  @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId String\n\n  tags WorkshopTag[]\n\n  progress  UserProgress[]     @relation(\"WorkshopProgress\")\n  resources WorkshopResource[]\n\n  learningPathItems LearningPathItem[]     @relation(\"WorkshopItems\")\n  objectives        WorkshopObjective[]\n  prerequisites     WorkshopPrerequisite[]\n\n  promoCodes PromoCode[] @relation(\"WorkshopPromoCodes\")\n  promotions Promotion[] @relation(\"WorkshopPromotion\")\n\n  Enrollment Enrollment[]\n\n  // Soft delete\n  deletedAt DateTime?\n  Payment   Payment[]\n}\n\nmodel Resource {\n  id          String   @id @default(uuid())\n  title       String\n  description String?\n  fileKey     String?\n  url         String\n  type        String // ResourceType: pdf,doc, zip etc...\n  createdAt   DateTime @default(now())\n\n  courseResources       CourseResource[]\n  lessonResources       LessonResource[]\n  workshopResources     WorkshopResource[]\n  learningPathResources LearningPathResource[]\n\n  learningPathItems LearningPathItem[] @relation(\"ResourceItems\")\n\n  user   User?  @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId String\n}\n\n// -----------------------------------\n// Ressources\n// -----------------------------------\nmodel LearningPathResource {\n  learningPathId String\n  resourceId     String\n\n  learningPath LearningPath @relation(fields: [learningPathId], references: [id], onDelete: Cascade)\n  resource     Resource     @relation(fields: [resourceId], references: [id], onDelete: Cascade)\n\n  @@id([learningPathId, resourceId])\n}\n\nmodel CourseResource {\n  courseId   String\n  resourceId String\n\n  course   Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)\n  resource Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)\n\n  @@id([courseId, resourceId])\n}\n\nmodel LessonResource {\n  lessonId   String\n  resourceId String\n\n  lesson   Lesson   @relation(fields: [lessonId], references: [id], onDelete: Cascade)\n  resource Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)\n\n  @@id([lessonId, resourceId])\n}\n\nmodel WorkshopResource {\n  workshopId String\n  resourceId String\n\n  workshop Workshop @relation(fields: [workshopId], references: [id], onDelete: Cascade)\n  resource Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)\n\n  @@id([workshopId, resourceId])\n}\n\n// -----------------------------------\n// USER PROGRESS\n// -----------------------------------\n\nmodel LessonProgress {\n  id        String  @id @default(uuid())\n  completed Boolean @default(false)\n\n  // TODO :: Tracking des sessions d'apprentissage\n  // startTime DateTime\n  // endTime   DateTime?\n  // watchedSeconds  Int?     // en minutes\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId   String\n  Lesson   Lesson @relation(fields: [lessonId], references: [id], onDelete: Cascade)\n  lessonId String\n\n  @@unique([userId, lessonId], map: \"uq_lessonProgress_user_lesson\")\n  @@index([userId, lessonId])\n  @@index([userId, completed])\n}\n\nmodel UserProgress {\n  id        String   @id @default(uuid())\n  userId    String\n  type      ItemType\n  itemId    String\n  completed Boolean  @default(false)\n  updatedAt DateTime @updatedAt\n\n  course   Course?       @relation(\"CourseProgress\", fields: [itemId], references: [id], map: \"fk_progress_course\")\n  workshop Workshop?     @relation(\"WorkshopProgress\", fields: [itemId], references: [id], map: \"fk_progress_workshop\")\n  path     LearningPath? @relation(\"LearningPathProgress\", fields: [itemId], references: [id], map: \"fk_progress_path\")\n\n  // TODO :: Ajouter des métadonnées de progression\n  // progressPercentage Float?    @default(0)\n  // startedAt          DateTime?\n  // completedAt        DateTime?\n  // timeSpent          Int?      @default(0) // en minutes\n}\n\n// -----------------------------------\n// TAGS (many-to-many)\n// -----------------------------------\n\nmodel Tag {\n  id    String  @id @default(uuid())\n  title String\n  slug  String  @unique(map: \"uq_tag_slug\")\n  color String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  courseTags       CourseTag[]\n  workshopTags     WorkshopTag[]\n  learningPathTags LearningPathTag[]\n}\n\nmodel CourseTag {\n  courseId String\n  tagId    String\n  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)\n  tag      Tag    @relation(fields: [tagId], references: [id])\n\n  @@id([courseId, tagId])\n}\n\nmodel WorkshopTag {\n  workshopId String\n  tagId      String\n  workshop   Workshop @relation(fields: [workshopId], references: [id], onDelete: Cascade)\n  tag        Tag      @relation(fields: [tagId], references: [id])\n\n  @@id([workshopId, tagId])\n}\n\nmodel LearningPathTag {\n  learningPathId String\n  tagId          String\n  learningPath   LearningPath @relation(fields: [learningPathId], references: [id], onDelete: Cascade)\n  tag            Tag          @relation(fields: [tagId], references: [id])\n\n  @@id([learningPathId, tagId])\n}\n\n// -----------------------------------\n// PROMOTIONS\n// -----------------------------------\n\nmodel Promotion {\n  id          String       @id @default(uuid())\n  title       String\n  description String?\n  discount    Int\n  type        DiscountType @default(PERCENTAGE)\n  startsAt    DateTime\n  endsAt      DateTime\n  active      Boolean      @default(true)\n\n  itemType ItemType\n\n  // Clés spécifiques pour chaque relation\n  courseId       String?\n  workshopId     String?\n  learningPathId String?\n\n  // Relations explicites\n  course       Course?       @relation(fields: [courseId], references: [id], onDelete: Cascade, name: \"CoursePromotion\")\n  workshop     Workshop?     @relation(fields: [workshopId], references: [id], onDelete: Cascade, name: \"WorkshopPromotion\")\n  learningPath LearningPath? @relation(fields: [learningPathId], references: [id], onDelete: Cascade, name: \"LearningPathPromotion\")\n}\n\nmodel PromoCode {\n  id          String       @id @default(uuid())\n  code        String       @unique(map: \"uq_promocode_code\")\n  description String?\n  discount    Int\n  type        DiscountType @default(PERCENTAGE)\n  usageLimit  Int?\n  usedCount   Int          @default(0)\n  startsAt    DateTime\n  endsAt      DateTime\n  active      Boolean      @default(true)\n\n  applicableCourses       Course[]       @relation(\"CoursePromoCodes\")\n  applicableWorkshops     Workshop[]     @relation(\"WorkshopPromoCodes\")\n  applicableLearningPaths LearningPath[] @relation(\"LearningPathPromoCodes\")\n}\n\n// -----------------------------------\n// PAYMENTS\n// -----------------------------------\n\nmodel Enrollment {\n  id String @id @default(uuid())\n\n  amount Int\n  status enrollmentStatus @default(Pending)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  course   Course? @relation(fields: [courseId], references: [id], onDelete: Cascade)\n  courseId String?\n\n  learningPath   LearningPath? @relation(fields: [learningPathId], references: [id], onDelete: Cascade)\n  learningPathId String?\n\n  workshop   Workshop? @relation(fields: [workshopId], references: [id], onDelete: Cascade)\n  workshopId String?\n\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId String\n\n  payment   Payment? @relation(\"EnrollmentToPayment\", fields: [paymentId], references: [id])\n  paymentId String?  @unique(map: \"uq_enrollment_payment\")\n\n  // Soft delete\n  deletedAt DateTime?\n\n  @@unique([userId, learningPathId], map: \"uq_enrollment_user_learningPath\")\n  @@unique([userId, courseId], map: \"uq_enrollment_user_course\")\n  @@unique([userId, workshopId], map: \"uq_enrollment_user_workshop\")\n}\n\nmodel Payment {\n  id       String @id @default(uuid())\n  stripeId String @unique(map: \"uq_payment_stripeId\")\n  user     User   @relation(fields: [userId], references: [id])\n  userId   String\n\n  course   Course? @relation(fields: [courseId], references: [id])\n  courseId String?\n\n  learningPath   LearningPath? @relation(fields: [learningPathId], references: [id])\n  learningPathId String?\n\n  workshop   Workshop? @relation(fields: [workshopId], references: [id])\n  workshopId String?\n\n  amount     Int\n  currency   String\n  status     String // 'succeeded', 'pending', 'failed', etc.\n  method     String? // card, stripe, etc.\n  receiptUrl String? // lien Stripe vers le reçu\n\n  createdAt DateTime @default(now())\n\n  enrollment Enrollment? @relation(\"EnrollmentToPayment\")\n\n  // Soft delete\n  deletedAt DateTime?\n}\n\n// -----------------------------------\n// BILLING\n// -----------------------------------\n\nmodel Invoice {\n  id        String        @id @default(uuid())\n  number    String\n  user      User          @relation(fields: [userId], references: [id])\n  userId    String\n  items     InvoiceItem[]\n  amount    Int // total TTC en centimes\n  currency  String        @default(\"EUR\")\n  pdfUrl    String?\n  date      DateTime      @default(now())\n  createdAt DateTime      @default(now())\n\n  // Soft delete\n  deletedAt DateTime?\n}\n\nmodel InvoiceItem {\n  id        String  @id @default(uuid())\n  invoice   Invoice @relation(fields: [invoiceId], references: [id])\n  invoiceId String\n\n  title       String\n  type        String // InvoiceItemType  COURSE ,WORKSHOP, LEARNING_PATH etc...\n  referenceId String // ID du cours, workshop, abonnement, etc.\n\n  quantity  Int @default(1)\n  unitPrice Int // centimes\n  total     Int // unitPrice * quantity\n}\n\n// -----------------------------------\n// Divers\n// -------------------------------\n\nmodel Objective {\n  id        String   @id @default(uuid())\n  content   String\n  createdAt DateTime @default(now())\n\n  courses       CourseObjective[]\n  workshops     WorkshopObjective[]\n  learningPaths LearningPathObjective[]\n}\n\nmodel Prerequisite {\n  id        String   @id @default(uuid())\n  content   String\n  createdAt DateTime @default(now())\n\n  courses       CoursePrerequisite[]\n  workshops     WorkshopPrerequisite[]\n  learningPaths LearningPathPrerequisite[]\n}\n\nmodel CourseObjective {\n  courseId    String\n  objectiveId String\n\n  course    Course    @relation(fields: [courseId], references: [id])\n  objective Objective @relation(fields: [objectiveId], references: [id])\n\n  @@id([courseId, objectiveId])\n}\n\nmodel CoursePrerequisite {\n  courseId       String\n  prerequisiteId String\n\n  course       Course       @relation(fields: [courseId], references: [id])\n  prerequisite Prerequisite @relation(fields: [prerequisiteId], references: [id])\n\n  @@id([courseId, prerequisiteId])\n}\n\nmodel WorkshopObjective {\n  workshopId  String\n  objectiveId String\n\n  workshop  Workshop  @relation(fields: [workshopId], references: [id])\n  objective Objective @relation(fields: [objectiveId], references: [id])\n\n  @@id([workshopId, objectiveId])\n}\n\nmodel WorkshopPrerequisite {\n  workshopId     String\n  prerequisiteId String\n\n  workshop     Workshop     @relation(fields: [workshopId], references: [id])\n  prerequisite Prerequisite @relation(fields: [prerequisiteId], references: [id])\n\n  @@id([workshopId, prerequisiteId])\n}\n\nmodel LearningPathObjective {\n  learningPathId String\n  objectiveId    String\n\n  learningPath LearningPath @relation(fields: [learningPathId], references: [id])\n  objective    Objective    @relation(fields: [objectiveId], references: [id])\n\n  @@id([learningPathId, objectiveId])\n}\n\nmodel LearningPathPrerequisite {\n  learningPathId String\n  prerequisiteId String\n\n  learningPath LearningPath @relation(fields: [learningPathId], references: [id])\n  prerequisite Prerequisite @relation(fields: [prerequisiteId], references: [id])\n\n  @@id([learningPathId, prerequisiteId])\n}\n\n// -----------------------------------\n// SITE OCNFIG\n// -----------------------------------\n\nmodel Feature {\n  id        String   @id @default(cuid())\n  title     String   @unique(map: \"uq_feature_title\")\n  desc      String\n  color     String?\n  iconName  String?\n  iconLib   String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Company {\n  id         String   @id @default(uuid())\n  name       String\n  address    String\n  postalCode String\n  city       String\n  country    String\n  email      String\n  phone      String?\n  siret      String?\n  vatNumber  String?\n  logoUrl    String?\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @default(now()) @updatedAt\n\n  companySocialLink CompanySocialLink[]\n}\n\nmodel SocialLink {\n  id        String   @id @default(cuid())\n  name      String\n  // url       String\n  iconLib   String // ex: \"lucide\", \"si\", \"fa\", \"tabler\"\n  iconName  String // ex: \"facebook\", \"github\", \"x\"\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  companySocialLink CompanySocialLink[]\n}\n\nmodel CompanySocialLink {\n  id           String   @id @default(cuid())\n  companyId    String\n  socialLinkId String\n  url          String // Lien spécifique de l'entreprise vers ce réseau social\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  company    Company    @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  socialLink SocialLink @relation(fields: [socialLinkId], references: [id], onDelete: Cascade)\n\n  @@unique([companyId, socialLinkId], map: \"uq_company_socialLink\")\n}\n\n// NEXT STEPS\n//------------------------------\n\n// model MediaFile {\n//   id       String @id @default(uuid())\n//   type     String // VIDEO, AUDIO, DOCUMENT, IMAGE, SUBTITLE\n//   fileKey  String\n//   duration Int?   // pour vidéos/audio en secondes\n//   size     Int?   // taille en bytes\n//   mimeType String? // video/mp4, application/pdf, etc.\n//   quality  String? // 720p, 1080p, 4K\n//\n//   lessonId String?\n//   lesson   Lesson? @relation(fields: [lessonId], references: [id])\n// }\n\n// model Lesson {\n//   id          String @id @default(uuid())\n//   title       String\n//   description String?\n//   position    Int\n//\n//   // Relations vers plusieurs fichiers\n//   mediaFiles  MediaFile[]\n//\n//   // Calculé automatiquement depuis les MediaFiles\n//   duration    Int @default(0)\n// }\n\n// model Quiz {\n//   id       String @id @default(uuid())\n//   title    String\n//   duration Int?   // en minutes\n//\n//   lessonId String?\n//   lesson   Lesson? @relation(fields: [lessonId], references: [id])\n//\n//   questions QuizQuestion[]\n//   attempts  QuizAttempt[]\n// }\n\n// model QuizQuestion {\n//   id       String @id @default(uuid())\n//   question String\n//   type     String // MULTIPLE_CHOICE, TRUE_FALSE, OPEN\n//\n//   quizId String\n//   quiz   Quiz   @relation(fields: [quizId], references: [id])\n//\n//   options QuizOption[]\n// }\n\n// model QuizAttempt {\n//   id        String   @id @default(uuid())\n//   score     Float\n//   maxScore  Float\n//   startedAt DateTime\n//   endedAt   DateTime?\n//\n//   userId String\n//   user   User   @relation(fields: [userId], references: [id])\n//   quizId String\n//   quiz   Quiz   @relation(fields: [quizId], references: [id])\n// }\n\n// model Certificate {\n//   id          String   @id @default(uuid())\n//   name        String\n//   description String?\n//   fileKey     String   // PDF du certificat\n//   issuedAt    DateTime @default(now())\n//   validUntil  DateTime?\n//\n//   userId String\n//   user   User   @relation(fields: [userId], references: [id])\n//\n//   itemType ItemType\n//   itemId   String   // Course, Workshop, ou LearningPath\n// }\n\n// model Review {\n//   id        String   @id @default(uuid())\n//   rating    Int      // 1-5 étoiles\n//   comment   String?\n//   createdAt DateTime @default(now())\n//\n//   userId String\n//   user   User   @relation(fields: [userId], references: [id])\n//\n//   // Relations polymorphes\n//   itemType ItemType\n//   itemId   String\n//\n//   @@unique([userId, itemType, itemId]) // Un avis par utilisateur par item\n// }\n\n// model Notification {\n//   id        String   @id @default(uuid())\n//   title     String\n//   message   String\n//   type      String   // EMAIL, PUSH, IN_APP\n//   read      Boolean  @default(false)\n//   createdAt DateTime @default(now())\n//\n//   userId String\n//   user   User   @relation(fields: [userId], references: [id])\n// }\n\n// model Discussion {\n//   id        String   @id @default(uuid())\n//   title     String\n//   content   String\n//   createdAt DateTime @default(now())\n//   pinned    Boolean  @default(false)\n//   solved    Boolean  @default(false)\n\n//   userId String\n//   user   User   @relation(fields: [userId], references: [id])\n//\n//   // Discussion liée à une leçon spécifique\n//   lessonId String?\n//   lesson   Lesson? @relation(fields: [lessonId], references: [id])\n//\n//   // Ou à un cours entier\n//   courseId String?\n//   course   Course? @relation(fields: [courseId], references: [id])\n//\n//   replies DiscussionReply[]\n// }\n\n// model DiscussionReply {\n//   id        String   @id @default(uuid())\n//   content   String\n//   createdAt DateTime @default(now())\n//\n//   userId String\n//   user   User   @relation(fields: [userId], references: [id])\n//\n//   discussionId String\n//   discussion   Discussion @relation(fields: [discussionId], references: [id])\n// }\n\n// model LiveSession {\n//   id        String   @id @default(uuid())\n//   title     String\n//   description String?\n//   startAt   DateTime\n//   endAt     DateTime\n//   url       String     // Lien Zoom, Meet, Jitsi...\n//   replayUrl String?    // Replay si dispo\n//   capacity  Int?\n//   createdAt DateTime   @default(now())\n//\n//   // Association\n//   learningPathId String?\n//   learningPath   LearningPath? @relation(fields: [learningPathId], references: [id])\n//\n//   courseId String?\n//   course   Course? @relation(fields: [courseId], references: [id])\n//\n//   hostId String\n//   host   User     @relation(fields: [hostId], references: [id])\n//\n//   participants LiveSessionParticipant[]\n// }\n\n// model LiveSessionParticipant {\n//   id            String   @id @default(uuid())\n//   sessionId     String\n//   session       LiveSession @relation(fields: [sessionId], references: [id])\n//   userId        String\n//   user          User     @relation(fields: [userId], references: [id])\n//   joinedAt      DateTime @default(now())\n//\n//   @@unique([sessionId, userId])\n// }\n\n// model UserActivityLog {\n//   id        String   @id @default(uuid())\n//   userId    String\n//   user      User     @relation(fields: [userId], references: [id])\n//   action    String   // LOGIN, VIEW_LESSON, START_WORKSHOP, etc.\n//   metadata  Json?\n//   createdAt DateTime @default(now())\n// }\n\n// model Badge {\n//   id        String @id @default(uuid())\n//   title     String\n//   iconKey   String\n//   desc      String?\n//   createdAt DateTime @default(now())\n// }\n\n// model UserBadge {\n//   id      String @id @default(uuid())\n//   userId  String\n//   badgeId String\n//   earnedAt DateTime @default(now())\n//\n//   user  User  @relation(fields: [userId], references: [id])\n//   badge Badge @relation(fields: [badgeId], references: [id])\n//\n//   @@unique([userId, badgeId])\n// }\n\n// model MentoringSession {\n//   id          String   @id @default(uuid())\n//   date        DateTime\n//   duration    Int      // en minutes\n//   topic       String?\n//   notes       String?\n//   replayUrl   String?  // Si enregistré\n//   mentorId    String\n//   studentId   String\n//\n//   mentor  User @relation(\"Mentor\", fields: [mentorId], references: [id])\n//   student User @relation(\"Student\", fields: [studentId], references: [id])\n//   createdAt   DateTime @default(now())\n// }\n\n// model Mentorship {\n//   id            String   @id @default(uuid())\n//   mentorId      String\n//   studentId     String\n//   learningPathId String?   // Optionnel : sur quel parcours\n//\n//   createdAt     DateTime @default(now())\n//\n//   mentor        User     @relation(\"MentorLink\", fields: [mentorId], references: [id])\n//   student       User     @relation(\"StudentLink\", fields: [studentId], references: [id])\n//   learningPath  LearningPath? @relation(fields: [learningPathId], references: [id])\n//\n//   sessions      MentoringSession[]\n// }\n",
  "inlineSchemaHash": "d2025714601b50df70c838f43162bb375c14e467c571e7ed7b7a0783526ea953",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"stripeCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"banReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lessonProgress\",\"kind\":\"object\",\"type\":\"LessonProgress\",\"relationName\":\"LessonProgressToUser\"},{\"name\":\"enrollment\",\"kind\":\"object\",\"type\":\"Enrollment\",\"relationName\":\"EnrollmentToUser\"},{\"name\":\"Payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToUser\"},{\"name\":\"Invoice\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToUser\"},{\"name\":\"courses\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToUser\"},{\"name\":\"LearningPath\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathToUser\"},{\"name\":\"Workshop\",\"kind\":\"object\",\"type\":\"Workshop\",\"relationName\":\"UserToWorkshop\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Resource\",\"kind\":\"object\",\"type\":\"Resource\",\"relationName\":\"ResourceToUser\"}],\"dbName\":\"user\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"},{\"name\":\"impersonatedBy\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"session\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"account\"},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification\"},\"Domain\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"desc\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iconName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iconLib\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToDomain\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"desc\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iconName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iconLib\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"courses\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CategoryToCourse\"},{\"name\":\"domain\",\"kind\":\"object\",\"type\":\"Domain\",\"relationName\":\"CategoryToDomain\"},{\"name\":\"domainId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"LearningPath\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"smallDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripePriceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LearningPathToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"LearningPathTag\",\"relationName\":\"LearningPathToLearningPathTag\"},{\"name\":\"contents\",\"kind\":\"object\",\"type\":\"LearningPathItem\",\"relationName\":\"LearningPathToLearningPathItem\"},{\"name\":\"progress\",\"kind\":\"object\",\"type\":\"UserProgress\",\"relationName\":\"LearningPathProgress\"},{\"name\":\"resources\",\"kind\":\"object\",\"type\":\"LearningPathResource\",\"relationName\":\"LearningPathToLearningPathResource\"},{\"name\":\"objectives\",\"kind\":\"object\",\"type\":\"LearningPathObjective\",\"relationName\":\"LearningPathToLearningPathObjective\"},{\"name\":\"prerequisites\",\"kind\":\"object\",\"type\":\"LearningPathPrerequisite\",\"relationName\":\"LearningPathToLearningPathPrerequisite\"},{\"name\":\"promoCodes\",\"kind\":\"object\",\"type\":\"PromoCode\",\"relationName\":\"LearningPathPromoCodes\"},{\"name\":\"promotions\",\"kind\":\"object\",\"type\":\"Promotion\",\"relationName\":\"LearningPathPromotion\"},{\"name\":\"Enrollment\",\"kind\":\"object\",\"type\":\"Enrollment\",\"relationName\":\"EnrollmentToLearningPath\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"LearningPathToPayment\"}],\"dbName\":null},\"LearningPathItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ItemType\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"learningPathId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"learningPath\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathToLearningPathItem\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseItems\"},{\"name\":\"workshopId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workshop\",\"kind\":\"object\",\"type\":\"Workshop\",\"relationName\":\"WorkshopItems\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource\",\"kind\":\"object\",\"type\":\"Resource\",\"relationName\":\"ResourceItems\"}],\"dbName\":null},\"Course\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"smallDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripePriceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CourseToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chapters\",\"kind\":\"object\",\"type\":\"Chapter\",\"relationName\":\"ChapterToCourse\"},{\"name\":\"enrollment\",\"kind\":\"object\",\"type\":\"Enrollment\",\"relationName\":\"CourseToEnrollment\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToCourse\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"CourseToPayment\"},{\"name\":\"promotions\",\"kind\":\"object\",\"type\":\"Promotion\",\"relationName\":\"CoursePromotion\"},{\"name\":\"promoCodes\",\"kind\":\"object\",\"type\":\"PromoCode\",\"relationName\":\"CoursePromoCodes\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"CourseTag\",\"relationName\":\"CourseToCourseTag\"},{\"name\":\"progress\",\"kind\":\"object\",\"type\":\"UserProgress\",\"relationName\":\"CourseProgress\"},{\"name\":\"resources\",\"kind\":\"object\",\"type\":\"CourseResource\",\"relationName\":\"CourseToCourseResource\"},{\"name\":\"learningPathItems\",\"kind\":\"object\",\"type\":\"LearningPathItem\",\"relationName\":\"CourseItems\"},{\"name\":\"objectives\",\"kind\":\"object\",\"type\":\"CourseObjective\",\"relationName\":\"CourseToCourseObjective\"},{\"name\":\"prerequisites\",\"kind\":\"object\",\"type\":\"CoursePrerequisite\",\"relationName\":\"CourseToCoursePrerequisite\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Chapter\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"ChapterToCourse\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lessons\",\"kind\":\"object\",\"type\":\"Lesson\",\"relationName\":\"ChapterToLesson\"}],\"dbName\":null},\"Lesson\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thumbnailKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"videoKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"public\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chapter\",\"kind\":\"object\",\"type\":\"Chapter\",\"relationName\":\"ChapterToLesson\"},{\"name\":\"chapterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lessonProgress\",\"kind\":\"object\",\"type\":\"LessonProgress\",\"relationName\":\"LessonToLessonProgress\"},{\"name\":\"resources\",\"kind\":\"object\",\"type\":\"LessonResource\",\"relationName\":\"LessonToLessonResource\"}],\"dbName\":null},\"Workshop\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statement\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statementsStartFileKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statementsStartFileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statementVideoKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripePriceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"solution\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"solutionFileKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"solutionFileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"solutionVideoKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWorkshop\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"WorkshopTag\",\"relationName\":\"WorkshopToWorkshopTag\"},{\"name\":\"progress\",\"kind\":\"object\",\"type\":\"UserProgress\",\"relationName\":\"WorkshopProgress\"},{\"name\":\"resources\",\"kind\":\"object\",\"type\":\"WorkshopResource\",\"relationName\":\"WorkshopToWorkshopResource\"},{\"name\":\"learningPathItems\",\"kind\":\"object\",\"type\":\"LearningPathItem\",\"relationName\":\"WorkshopItems\"},{\"name\":\"objectives\",\"kind\":\"object\",\"type\":\"WorkshopObjective\",\"relationName\":\"WorkshopToWorkshopObjective\"},{\"name\":\"prerequisites\",\"kind\":\"object\",\"type\":\"WorkshopPrerequisite\",\"relationName\":\"WorkshopToWorkshopPrerequisite\"},{\"name\":\"promoCodes\",\"kind\":\"object\",\"type\":\"PromoCode\",\"relationName\":\"WorkshopPromoCodes\"},{\"name\":\"promotions\",\"kind\":\"object\",\"type\":\"Promotion\",\"relationName\":\"WorkshopPromotion\"},{\"name\":\"Enrollment\",\"kind\":\"object\",\"type\":\"Enrollment\",\"relationName\":\"EnrollmentToWorkshop\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToWorkshop\"}],\"dbName\":null},\"Resource\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"courseResources\",\"kind\":\"object\",\"type\":\"CourseResource\",\"relationName\":\"CourseResourceToResource\"},{\"name\":\"lessonResources\",\"kind\":\"object\",\"type\":\"LessonResource\",\"relationName\":\"LessonResourceToResource\"},{\"name\":\"workshopResources\",\"kind\":\"object\",\"type\":\"WorkshopResource\",\"relationName\":\"ResourceToWorkshopResource\"},{\"name\":\"learningPathResources\",\"kind\":\"object\",\"type\":\"LearningPathResource\",\"relationName\":\"LearningPathResourceToResource\"},{\"name\":\"learningPathItems\",\"kind\":\"object\",\"type\":\"LearningPathItem\",\"relationName\":\"ResourceItems\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ResourceToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"LearningPathResource\":{\"fields\":[{\"name\":\"learningPathId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"learningPath\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathToLearningPathResource\"},{\"name\":\"resource\",\"kind\":\"object\",\"type\":\"Resource\",\"relationName\":\"LearningPathResourceToResource\"}],\"dbName\":null},\"CourseResource\":{\"fields\":[{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToCourseResource\"},{\"name\":\"resource\",\"kind\":\"object\",\"type\":\"Resource\",\"relationName\":\"CourseResourceToResource\"}],\"dbName\":null},\"LessonResource\":{\"fields\":[{\"name\":\"lessonId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lesson\",\"kind\":\"object\",\"type\":\"Lesson\",\"relationName\":\"LessonToLessonResource\"},{\"name\":\"resource\",\"kind\":\"object\",\"type\":\"Resource\",\"relationName\":\"LessonResourceToResource\"}],\"dbName\":null},\"WorkshopResource\":{\"fields\":[{\"name\":\"workshopId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workshop\",\"kind\":\"object\",\"type\":\"Workshop\",\"relationName\":\"WorkshopToWorkshopResource\"},{\"name\":\"resource\",\"kind\":\"object\",\"type\":\"Resource\",\"relationName\":\"ResourceToWorkshopResource\"}],\"dbName\":null},\"LessonProgress\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LessonProgressToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Lesson\",\"kind\":\"object\",\"type\":\"Lesson\",\"relationName\":\"LessonToLessonProgress\"},{\"name\":\"lessonId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"UserProgress\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ItemType\"},{\"name\":\"itemId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseProgress\"},{\"name\":\"workshop\",\"kind\":\"object\",\"type\":\"Workshop\",\"relationName\":\"WorkshopProgress\"},{\"name\":\"path\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathProgress\"}],\"dbName\":null},\"Tag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"courseTags\",\"kind\":\"object\",\"type\":\"CourseTag\",\"relationName\":\"CourseTagToTag\"},{\"name\":\"workshopTags\",\"kind\":\"object\",\"type\":\"WorkshopTag\",\"relationName\":\"TagToWorkshopTag\"},{\"name\":\"learningPathTags\",\"kind\":\"object\",\"type\":\"LearningPathTag\",\"relationName\":\"LearningPathTagToTag\"}],\"dbName\":null},\"CourseTag\":{\"fields\":[{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tagId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToCourseTag\"},{\"name\":\"tag\",\"kind\":\"object\",\"type\":\"Tag\",\"relationName\":\"CourseTagToTag\"}],\"dbName\":null},\"WorkshopTag\":{\"fields\":[{\"name\":\"workshopId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tagId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workshop\",\"kind\":\"object\",\"type\":\"Workshop\",\"relationName\":\"WorkshopToWorkshopTag\"},{\"name\":\"tag\",\"kind\":\"object\",\"type\":\"Tag\",\"relationName\":\"TagToWorkshopTag\"}],\"dbName\":null},\"LearningPathTag\":{\"fields\":[{\"name\":\"learningPathId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tagId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"learningPath\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathToLearningPathTag\"},{\"name\":\"tag\",\"kind\":\"object\",\"type\":\"Tag\",\"relationName\":\"LearningPathTagToTag\"}],\"dbName\":null},\"Promotion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"DiscountType\"},{\"name\":\"startsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"itemType\",\"kind\":\"enum\",\"type\":\"ItemType\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workshopId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"learningPathId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CoursePromotion\"},{\"name\":\"workshop\",\"kind\":\"object\",\"type\":\"Workshop\",\"relationName\":\"WorkshopPromotion\"},{\"name\":\"learningPath\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathPromotion\"}],\"dbName\":null},\"PromoCode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"DiscountType\"},{\"name\":\"usageLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"usedCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"applicableCourses\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CoursePromoCodes\"},{\"name\":\"applicableWorkshops\",\"kind\":\"object\",\"type\":\"Workshop\",\"relationName\":\"WorkshopPromoCodes\"},{\"name\":\"applicableLearningPaths\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathPromoCodes\"}],\"dbName\":null},\"Enrollment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"enrollmentStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToEnrollment\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"learningPath\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"EnrollmentToLearningPath\"},{\"name\":\"learningPathId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workshop\",\"kind\":\"object\",\"type\":\"Workshop\",\"relationName\":\"EnrollmentToWorkshop\"},{\"name\":\"workshopId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EnrollmentToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"EnrollmentToPayment\"},{\"name\":\"paymentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PaymentToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToPayment\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"learningPath\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathToPayment\"},{\"name\":\"learningPathId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workshop\",\"kind\":\"object\",\"type\":\"Workshop\",\"relationName\":\"PaymentToWorkshop\"},{\"name\":\"workshopId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"receiptUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"enrollment\",\"kind\":\"object\",\"type\":\"Enrollment\",\"relationName\":\"EnrollmentToPayment\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Invoice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvoiceToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"InvoiceItem\",\"relationName\":\"InvoiceToInvoiceItem\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pdfUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"InvoiceItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoice\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToInvoiceItem\"},{\"name\":\"invoiceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referenceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Objective\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"courses\",\"kind\":\"object\",\"type\":\"CourseObjective\",\"relationName\":\"CourseObjectiveToObjective\"},{\"name\":\"workshops\",\"kind\":\"object\",\"type\":\"WorkshopObjective\",\"relationName\":\"ObjectiveToWorkshopObjective\"},{\"name\":\"learningPaths\",\"kind\":\"object\",\"type\":\"LearningPathObjective\",\"relationName\":\"LearningPathObjectiveToObjective\"}],\"dbName\":null},\"Prerequisite\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"courses\",\"kind\":\"object\",\"type\":\"CoursePrerequisite\",\"relationName\":\"CoursePrerequisiteToPrerequisite\"},{\"name\":\"workshops\",\"kind\":\"object\",\"type\":\"WorkshopPrerequisite\",\"relationName\":\"PrerequisiteToWorkshopPrerequisite\"},{\"name\":\"learningPaths\",\"kind\":\"object\",\"type\":\"LearningPathPrerequisite\",\"relationName\":\"LearningPathPrerequisiteToPrerequisite\"}],\"dbName\":null},\"CourseObjective\":{\"fields\":[{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"objectiveId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToCourseObjective\"},{\"name\":\"objective\",\"kind\":\"object\",\"type\":\"Objective\",\"relationName\":\"CourseObjectiveToObjective\"}],\"dbName\":null},\"CoursePrerequisite\":{\"fields\":[{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prerequisiteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToCoursePrerequisite\"},{\"name\":\"prerequisite\",\"kind\":\"object\",\"type\":\"Prerequisite\",\"relationName\":\"CoursePrerequisiteToPrerequisite\"}],\"dbName\":null},\"WorkshopObjective\":{\"fields\":[{\"name\":\"workshopId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"objectiveId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workshop\",\"kind\":\"object\",\"type\":\"Workshop\",\"relationName\":\"WorkshopToWorkshopObjective\"},{\"name\":\"objective\",\"kind\":\"object\",\"type\":\"Objective\",\"relationName\":\"ObjectiveToWorkshopObjective\"}],\"dbName\":null},\"WorkshopPrerequisite\":{\"fields\":[{\"name\":\"workshopId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prerequisiteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workshop\",\"kind\":\"object\",\"type\":\"Workshop\",\"relationName\":\"WorkshopToWorkshopPrerequisite\"},{\"name\":\"prerequisite\",\"kind\":\"object\",\"type\":\"Prerequisite\",\"relationName\":\"PrerequisiteToWorkshopPrerequisite\"}],\"dbName\":null},\"LearningPathObjective\":{\"fields\":[{\"name\":\"learningPathId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"objectiveId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"learningPath\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathToLearningPathObjective\"},{\"name\":\"objective\",\"kind\":\"object\",\"type\":\"Objective\",\"relationName\":\"LearningPathObjectiveToObjective\"}],\"dbName\":null},\"LearningPathPrerequisite\":{\"fields\":[{\"name\":\"learningPathId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prerequisiteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"learningPath\",\"kind\":\"object\",\"type\":\"LearningPath\",\"relationName\":\"LearningPathToLearningPathPrerequisite\"},{\"name\":\"prerequisite\",\"kind\":\"object\",\"type\":\"Prerequisite\",\"relationName\":\"LearningPathPrerequisiteToPrerequisite\"}],\"dbName\":null},\"Feature\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"desc\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iconName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iconLib\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"siret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vatNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companySocialLink\",\"kind\":\"object\",\"type\":\"CompanySocialLink\",\"relationName\":\"CompanyToCompanySocialLink\"}],\"dbName\":null},\"SocialLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iconLib\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iconName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companySocialLink\",\"kind\":\"object\",\"type\":\"CompanySocialLink\",\"relationName\":\"CompanySocialLinkToSocialLink\"}],\"dbName\":null},\"CompanySocialLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"socialLinkId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToCompanySocialLink\"},{\"name\":\"socialLink\",\"kind\":\"object\",\"type\":\"SocialLink\",\"relationName\":\"CompanySocialLinkToSocialLink\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

